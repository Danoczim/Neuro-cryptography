/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NeuralCryptography;

import Cryptography.SymmetricCryptoMethod;
import Cryptography.SymmetricEncryptor;
import TreeParityMachine.TreeParityMachineClient;
import TreeParityMachine.TreeParityMachineCommon;
import TreeParityMachine.TreeParityMachineInputVector;
import java.awt.Component;
import java.nio.charset.StandardCharsets;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Matt
 */
public class NeuralCryptographyFrame extends javax.swing.JFrame {

    private String plainStringComputer1, plainStringComputer2;
    private String encryptedStringComputer1, encryptedStringComputer2;
    private String decryptedStringComputer1, decryptedStringComputer2;

    private int hiddenNeuronsCount, inputNeuronsCount, weightDispersion, sumMax, itrMax, actualIteration, sum, ss;

    private TreeParityMachineClient tpmComputerA, tpmComputerB;
    private SymmetricEncryptor encryptor;
    private SymmetricCryptoMethod method;

    /**
     * Creates new form NewJFrame
     */
    public NeuralCryptographyFrame() {
        initComponents();
        for (SymmetricCryptoMethod method : SymmetricCryptoMethod.values()) {
            jComboBox1.addItem(method.name());
        }
        for (Component component : jPanel2.getComponents()) {
            component.setEnabled(false);
        }
        for (Component component : jPanel3.getComponents()) {
            component.setEnabled(false);
        }
        encryptor = new SymmetricEncryptor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        encryptComputer1Button = new javax.swing.JButton();
        decryptComputer1Button = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        plainComputer1TextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        encryptedComputer1TextArea = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        decryptedComputer1TextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        sendComputer1Button = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        encryptComputer2Button = new javax.swing.JButton();
        decryptComputer2Button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        plainComputer2TextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        encryptedComputer2TextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        decryptedComputer2TextArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        sendComputer2Button = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        inputVectorTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Neurokryptografia - symetrické metódy");

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        encryptComputer1Button.setText("Sifruj");
        encryptComputer1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptComputer1ButtonActionPerformed(evt);
            }
        });

        decryptComputer1Button.setText("Odsifruj");
        decryptComputer1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptComputer1ButtonActionPerformed(evt);
            }
        });

        plainComputer1TextArea.setColumns(20);
        plainComputer1TextArea.setRows(5);
        jScrollPane5.setViewportView(plainComputer1TextArea);

        jLabel8.setText("Zadaj text:");

        encryptedComputer1TextArea.setEditable(false);
        encryptedComputer1TextArea.setColumns(20);
        encryptedComputer1TextArea.setRows(5);
        jScrollPane6.setViewportView(encryptedComputer1TextArea);

        decryptedComputer1TextArea.setEditable(false);
        decryptedComputer1TextArea.setColumns(20);
        decryptedComputer1TextArea.setRows(5);
        jScrollPane7.setViewportView(decryptedComputer1TextArea);

        jLabel3.setText("Verejný kľúč:");

        sendComputer1Button.setText("Posli");
        sendComputer1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendComputer1ButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Kryptovaný text:");

        jTextField1.setEditable(false);

        jLabel17.setText("Dekryptovaný text:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Klient A");

        jLabel23.setText("Hash kľúča:");

        jTextField8.setEditable(false);

        jTextField10.setEditable(false);

        jLabel25.setText("Metóda hashu:");

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Váhy klienta A");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(encryptComputer1Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(decryptComputer1Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendComputer1Button)
                .addGap(99, 99, 99))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel17)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(33, 33, 33))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel23)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel25)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))))
                            .addGap(2, 2, 2))))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(194, 194, 194))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel8)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptComputer1Button)
                    .addComponent(decryptComputer1Button)
                    .addComponent(sendComputer1Button)
                    .addComponent(jButton2))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("");
        jPanel1.setName(""); // NOI18N

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(5), null, Integer.valueOf(1)));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(5), null, Integer.valueOf(1)));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jButton1.setText("Synchronizuj TPM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Vstupné neuróny (N):");

        jLabel5.setText("Skryté neuróny (K):");

        jLabel6.setText("Váhový rozptyl (L):");

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("TPM parametre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(jSpinner3)
                            .addComponent(jSpinner1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(104, 64));

        encryptComputer2Button.setText("Sifruj");
        encryptComputer2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptComputer2ButtonActionPerformed(evt);
            }
        });

        decryptComputer2Button.setText("Odsifruj");
        decryptComputer2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptComputer2ButtonActionPerformed(evt);
            }
        });

        plainComputer2TextArea.setColumns(20);
        plainComputer2TextArea.setRows(5);
        jScrollPane1.setViewportView(plainComputer2TextArea);

        jLabel1.setText("Zadaj text:");

        encryptedComputer2TextArea.setEditable(false);
        encryptedComputer2TextArea.setColumns(20);
        encryptedComputer2TextArea.setRows(5);
        jScrollPane2.setViewportView(encryptedComputer2TextArea);

        decryptedComputer2TextArea.setEditable(false);
        decryptedComputer2TextArea.setColumns(20);
        decryptedComputer2TextArea.setRows(5);
        jScrollPane3.setViewportView(decryptedComputer2TextArea);

        jLabel7.setText("Verejný kľúč:");

        sendComputer2Button.setText("Posli");
        sendComputer2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendComputer2ButtonActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);

        jLabel18.setText("Dekryptovaný text:");

        jLabel19.setText("Kryptovaný text:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Klient B");

        jTextField9.setEditable(false);

        jLabel24.setText("Hash kľúča:");

        jTextField11.setEditable(false);

        jLabel26.setText("Metóda hashu:");

        jButton4.setText("Váhy klienta B");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel20))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7)
                .addGap(4, 4, 4)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel24)
                .addGap(4, 4, 4)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addGap(1, 1, 1)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel18))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(encryptComputer2Button)
                .addGap(13, 13, 13)
                .addComponent(decryptComputer2Button)
                .addGap(9, 9, 9)
                .addComponent(sendComputer2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel20)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel24))
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel26))
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jButton4)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel19)))
                .addGap(5, 5, 5)
                .addComponent(jLabel18)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(encryptComputer2Button)
                    .addComponent(decryptComputer2Button)
                    .addComponent(sendComputer2Button)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        inputVectorTextArea.setColumns(20);
        inputVectorTextArea.setRows(5);
        jScrollPane9.setViewportView(inputVectorTextArea);

        jLabel2.setText("Počet iterácií:");

        jTextField3.setEditable(false);

        jLabel12.setText("Maximum iterácií:");

        jTextField4.setEditable(false);

        jLabel13.setText("Veľkosť kľúča:");

        jTextField5.setEditable(false);

        jLabel14.setText("Dĺžka kľúča:");

        jTextField6.setEditable(false);

        jLabel15.setText("Vymenené dáta (KB):");

        jTextField7.setEditable(false);

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel10.setText("Kryptografická metóda:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Výsledok TPM synchronizácie");

        jLabel27.setText("TPM vstupné vektory:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            resetUI();
            inputNeuronsCount = (int) jSpinner1.getValue();
            hiddenNeuronsCount = (int) jSpinner2.getValue();
            weightDispersion = (int) jSpinner3.getValue();
            itrMax = (weightDispersion * weightDispersion * weightDispersion * weightDispersion) * inputNeuronsCount * hiddenNeuronsCount;
            sumMax = hiddenNeuronsCount * inputNeuronsCount * weightDispersion / 4;

            //Create new instance of TreeParityMachineClient class
            tpmComputerA = new TreeParityMachineClient(hiddenNeuronsCount, inputNeuronsCount, weightDispersion);
            tpmComputerA.setMaximumIterations(itrMax);
            tpmComputerA.setMaximumSum(sumMax);

            tpmComputerB = new TreeParityMachineClient(hiddenNeuronsCount, inputNeuronsCount, weightDispersion);
            tpmComputerB.setMaximumIterations(itrMax);
            tpmComputerB.setMaximumSum(itrMax);

            //Find sum
            sum = 0;
            for (ss = 0; ss < hiddenNeuronsCount * inputNeuronsCount; ss++) {
                sum += Math.abs(tpmComputerA.getTreeParityMachine().getWeightValue(ss) - tpmComputerB.getTreeParityMachine().getWeightValue(ss));
            }
            inputVectorTextArea.append("Inicializačná chyba :"+sum+"\n");

            //--------- MAIN ITERATION FOR SYNCHRONIZATION ---------
            for (actualIteration = 1; actualIteration < tpmComputerA.getMaximumIterations() + 1; actualIteration++) {
                jTextField3.setText("" + actualIteration);

                TreeParityMachineInputVector inputVector = new TreeParityMachineInputVector(hiddenNeuronsCount, inputNeuronsCount);
                inputVectorTextArea.append("Iterácia " + actualIteration + ":" + inputVector.toString() + "\n");

                tpmComputerA.getTreeParityMachine().setTpmInputVector(inputVector);
                tpmComputerB.getTreeParityMachine().setTpmInputVector(inputVector);
                tpmComputerA.getTreeParityMachine().ComputeTPMResult();
                tpmComputerB.getTreeParityMachine().ComputeTPMResult();

                if (tpmComputerA.getTreeParityMachine().getOutput() == tpmComputerB.getTreeParityMachine().getOutput()) {
                    tpmComputerA.getTreeParityMachine().UpdateWeight();
                    tpmComputerB.getTreeParityMachine().UpdateWeight();

                    //Find the sum
                    sum = 0;
                    for (ss = 0; ss < hiddenNeuronsCount * inputNeuronsCount; ss++) {
                        sum += Math.abs(tpmComputerA.getTreeParityMachine().getWeightValue(ss) - tpmComputerB.getTreeParityMachine().getWeightValue(ss));
                    }                    
                }
                inputVectorTextArea.append("\tChyba: "+sum+"\n");
                if (sum == 0) {
                    break;
                }
            } //end of main iteration

            if (sum == 0) {
                // Computation of result variables
                int key_size = 37 / (weightDispersion * 2 + 1);
                int key_length = hiddenNeuronsCount * inputNeuronsCount / key_size;
                double dataExchanged = actualIteration * (hiddenNeuronsCount * inputNeuronsCount + 4) / 1024.0;

                for (Component component : jPanel2.getComponents()) {
                    component.setEnabled(true);
                }
                for (Component component : jPanel3.getComponents()) {
                    component.setEnabled(true);
                }
                jTextField4.setText("" + tpmComputerA.getMaximumIterations());
                jTextField5.setText("" + key_size);
                jTextField6.setText("" + key_length);
                jTextField7.setText(String.format("%.2f", dataExchanged));
                jLabel16.setText("Úspešne zosynchronizované!");

                // Generation of the final public key
                for (int i = 1; i < key_length + 1; i++) {
                    int K = 0;
                    int H = 0;
                    for (int j = (i - 1) * key_size; j < i * key_size; j++) {
                        K = K + tpmComputerA.getTreeParityMachine().getWeightValue(j) + weightDispersion;
                        H = H + tpmComputerB.getTreeParityMachine().getWeightValue(j) + weightDispersion;
                    }
                    tpmComputerA.setPublicKey(tpmComputerA.getPublicKey() + TreeParityMachineCommon.keyDictionary.charAt(K));
                    tpmComputerB.setPublicKey(tpmComputerB.getPublicKey() + TreeParityMachineCommon.keyDictionary.charAt(H));
                }
                jTextField1.setText(tpmComputerA.getPublicKey());
                jTextField2.setText(tpmComputerB.getPublicKey());
            } else {
                jLabel16.setText("Nepodarilo sa zosynchronizovať!");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void encryptComputer1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptComputer1ButtonActionPerformed
        try {
            plainStringComputer1 = plainComputer1TextArea.getText();
            if (plainStringComputer1.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Zadaj správu na šifrovanie pre klienta A!", "Upozornenie", 0);
                return;
            }
            method = SymmetricCryptoMethod.values()[jComboBox1.getSelectedIndex()];
            encryptedStringComputer1 = encryptor.encrypt(plainStringComputer1, tpmComputerA.getPublicKey(),
                    method, StandardCharsets.UTF_16);
            encryptedComputer1TextArea.setText(encryptedStringComputer1);
            setPublicKeyAttributes();
        } catch (Exception e) {
            System.out.println("Chyba enkryptovania od klienta A: " + e.getMessage());
        }
    }//GEN-LAST:event_encryptComputer1ButtonActionPerformed

    private void decryptComputer1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptComputer1ButtonActionPerformed
        try {
            if (encryptedStringComputer1 == null || encryptedStringComputer1.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nie je čo odšifrovať u klienta A!", "Upozornenie", 0);
                return;
            }
            decryptedStringComputer1 = encryptor.decrypt(encryptedStringComputer1, tpmComputerA.getPublicKey(),
                    method, StandardCharsets.UTF_16);
            decryptedComputer1TextArea.setText(decryptedStringComputer1);
        } catch (Exception e) {
            System.out.println("Chyba dekryptovania od klienta A: " + e.getMessage());
        }
    }//GEN-LAST:event_decryptComputer1ButtonActionPerformed

    private void decryptComputer2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptComputer2ButtonActionPerformed
        try {
            if (encryptedStringComputer2 == null || encryptedStringComputer2.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nie je čo odšifrovať u klienta B!", "Upozornenie", 0);
                return;
            }
            decryptedStringComputer2 = encryptor.decrypt(encryptedStringComputer2, tpmComputerB.getPublicKey(),
                    method, StandardCharsets.UTF_16);
            decryptedComputer2TextArea.setText(decryptedStringComputer2);
        } catch (Exception e) {
            System.out.println("Chyba dekryptovania od klienta B: " + e.getMessage());
        }
    }//GEN-LAST:event_decryptComputer2ButtonActionPerformed

    private void encryptComputer2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptComputer2ButtonActionPerformed
        try {
            plainStringComputer2 = plainComputer2TextArea.getText();
            if (plainStringComputer2.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Zadaj správu na šifrovanie pre klienta B!", "Upozornenie", 0);
                return;
            }
            method = SymmetricCryptoMethod.values()[jComboBox1.getSelectedIndex()];
            encryptedStringComputer2 = encryptor.encrypt(plainStringComputer2, tpmComputerB.getPublicKey(),
                    method, StandardCharsets.UTF_16);
            encryptedComputer2TextArea.setText(encryptedStringComputer2);
            setPublicKeyAttributes();
        } catch (Exception e) {
            System.out.println("Chyba enkryptovania od klienta B: " + e.getMessage());
        }
    }//GEN-LAST:event_encryptComputer2ButtonActionPerformed

    private void sendComputer2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendComputer2ButtonActionPerformed
        try {
            decryptedComputer2TextArea.setText("");
            plainComputer1TextArea.setText("");
            plainStringComputer2 = plainComputer2TextArea.getText();
            if (plainStringComputer2.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Zadaj správu na odoslanie pre klienta A!", "Upozornenie", 0);
                return;
            }
            encryptComputer2ButtonActionPerformed(evt);
            encryptedComputer1TextArea.setText(encryptedStringComputer2);
            encryptedStringComputer1 = encryptedStringComputer2;
            decryptComputer1ButtonActionPerformed(evt);
        } catch (Exception e) {
            System.out.println("Chyba posielania od klienta B: " + e.getMessage());
        }
    }//GEN-LAST:event_sendComputer2ButtonActionPerformed

    private void sendComputer1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendComputer1ButtonActionPerformed
        try {
            decryptedComputer1TextArea.setText("");
            plainComputer2TextArea.setText("");
            plainStringComputer1 = plainComputer1TextArea.getText();
            if (plainStringComputer1.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Zadaj správu na odoslanie pre klienta B!", "Upozornenie", 0);
                return;
            }
            encryptComputer1ButtonActionPerformed(evt);
            encryptedComputer2TextArea.setText(encryptedStringComputer1);
            encryptedStringComputer2 = encryptedStringComputer1;
            decryptComputer2ButtonActionPerformed(evt);
        } catch (Exception e) {
            System.out.println("Chyba posielania od klienta A: " + e.getMessage());
        }
    }//GEN-LAST:event_sendComputer1ButtonActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        resetCommunicationUI();
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        resetCommunicationUI();
        encryptedStringComputer1 = encryptedStringComputer2 = "";
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       new WeightDialog(this, false, tpmComputerA.getTreeParityMachine(), "A");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new WeightDialog(this, false, tpmComputerB.getTreeParityMachine(), "B");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void setPublicKeyAttributes(){
        jTextField8.setText(encryptor.getHashedPublicKey());
        jTextField10.setText(encryptor.getEncryptCipher().getAlgorithm());
        jTextField9.setText(encryptor.getHashedPublicKey());
        jTextField11.setText(encryptor.getEncryptCipher().getAlgorithm());
    }
    
    private void resetUI() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");        
        jTextField10.setText("");
        jTextField11.setText("");
        inputVectorTextArea.setText("");
        for (Component component : jPanel2.getComponents()) {
            component.setEnabled(false);
        }
        for (Component component : jPanel3.getComponents()) {
            component.setEnabled(false);
        }
        resetCommunicationUI();
    }

    private void resetCommunicationUI() {
        plainComputer1TextArea.setText("");
        plainComputer2TextArea.setText("");
        encryptedComputer1TextArea.setText("");
        encryptedComputer2TextArea.setText("");
        decryptedComputer1TextArea.setText("");
        decryptedComputer2TextArea.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NeuralCryptographyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NeuralCryptographyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NeuralCryptographyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NeuralCryptographyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            NeuralCryptographyFrame c;

            public void run() {
                new NeuralCryptographyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decryptComputer1Button;
    private javax.swing.JButton decryptComputer2Button;
    private javax.swing.JTextArea decryptedComputer1TextArea;
    private javax.swing.JTextArea decryptedComputer2TextArea;
    private javax.swing.JButton encryptComputer1Button;
    private javax.swing.JButton encryptComputer2Button;
    private javax.swing.JTextArea encryptedComputer1TextArea;
    private javax.swing.JTextArea encryptedComputer2TextArea;
    private javax.swing.JTextArea inputVectorTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextArea plainComputer1TextArea;
    private javax.swing.JTextArea plainComputer2TextArea;
    private javax.swing.JButton sendComputer1Button;
    private javax.swing.JButton sendComputer2Button;
    // End of variables declaration//GEN-END:variables
}
